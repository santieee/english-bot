"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const telegraf_1 = require("telegraf");
function startBoard() {
    return telegraf_1.Extra.HTML().markup((m) => m.inlineKeyboard([
        [m.callbackButton('üìö –°–ª–æ–≤–∞—Ä—å', JSON.stringify({ a: 'getLibrary' }), false)],
        [m.callbackButton('üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç', 'profile', false)],
    ], {}));
}
exports.startBoard = startBoard;
function libraryBoard(data) {
    const backArrow = data.page > 1 ?
        ['‚¨ÖÔ∏è', JSON.stringify({ a: 'getLibrary', page: data.page - 1 }), false] :
        ['‚èπ', 'stub', false];
    const nextArrow = data.page < data.pages ?
        ['‚û°Ô∏è', JSON.stringify({ a: 'getLibrary', page: data.page + 1 }), false] :
        ['‚èπ', 'stub', false];
    return telegraf_1.Extra.HTML().markup((m) => m.inlineKeyboard([
        ...data.words.map((word) => [m.callbackButton(word.en, JSON.stringify({ a: 'getWord', id: word.id }), false)]),
        [m.callbackButton(...backArrow), m.callbackButton(...nextArrow)],
        // [m.callbackButton('‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ', 'addWord', false)],
        [m.callbackButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥', 'back', false)],
    ], {}));
}
exports.libraryBoard = libraryBoard;
function afterSaveWordBoard(id) {
    return telegraf_1.Extra.HTML().markup((m) => m.inlineKeyboard([
        [m.callbackButton('‚ùå –£–¥–∞–ª–∏—Ç—å', JSON.stringify({ a: 'removeWord', id }), false)],
        [m.callbackButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥', JSON.stringify({ a: 'getLibrary' }), false)],
    ], {}));
}
exports.afterSaveWordBoard = afterSaveWordBoard;
function backToLibrary() {
    return telegraf_1.Extra.HTML().markup((m) => m.inlineKeyboard([
        [m.callbackButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥', JSON.stringify({ a: 'getLibrary' }), false)],
    ], {}));
}
exports.backToLibrary = backToLibrary;
//# sourceMappingURL=keyboards.js.map