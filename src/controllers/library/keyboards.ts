import { Extra, Markup } from 'telegraf';
import { Word } from '../../models/word';

export function startBoard() {
  return Extra.HTML().markup((m: Markup) =>
    m.inlineKeyboard([
      [m.callbackButton('üìö –°–ª–æ–≤–∞—Ä—å', JSON.stringify({a: 'getLibrary'}), false)],
      [m.callbackButton('üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç', 'profile', false)],
    ], {}),
  );
}

export function libraryBoard(data: {words: Word[], page: number, pages: number}) {
 
  const backArrow: [string, string, boolean] = data.page > 1 ?
    ['‚¨ÖÔ∏è', JSON.stringify({a: 'getLibrary' , page: data.page - 1}), false] :
    ['‚èπ', 'stub', false];
  const nextArrow: [string, string, boolean] =  data.page < data.pages ?
    ['‚û°Ô∏è', JSON.stringify({a: 'getLibrary' , page: data.page + 1}), false] :
    ['‚èπ', 'stub', false];
    
  return Extra.HTML().markup((m: Markup) =>
    m.inlineKeyboard([
      ...data.words.map( (word: Word) => [m.callbackButton(word.en, JSON.stringify({a: 'getWord', id: word.id}), false)]),
      [m.callbackButton(...backArrow), m.callbackButton(...nextArrow)],
      // [m.callbackButton('‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ', 'addWord', false)],
      [m.callbackButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥', 'back', false)],
    ], {}),
  );
}

export function afterSaveWordBoard(id: number) {
  return Extra.HTML().markup((m: Markup) =>
    m.inlineKeyboard([
      [m.callbackButton('‚ùå –£–¥–∞–ª–∏—Ç—å', JSON.stringify({a: 'removeWord', id}), false)],
      [m.callbackButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥', JSON.stringify({a: 'getLibrary'}), false)],
    ], {}),
  );
}

export function backToLibrary() {
  return Extra.HTML().markup((m: Markup) =>
    m.inlineKeyboard([
      [m.callbackButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥', JSON.stringify({a: 'getLibrary'}), false)],
    ], {}),
  );
}